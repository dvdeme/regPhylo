% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Align.Concat.R
\name{Align.Concat}
\alias{Align.Concat}
\title{Concatenate alignments from different gene regions into a supermatrix at the species level}
\usage{
Align.Concat(
  input = NULL,
  Sp.List.NoDNA = NULL,
  outputConcat = NULL,
  Seq.Name.Identical = NULL,
  split = "_",
  chunk.names.to.Keep = 2,
  Homogeneise.tip.names = FALSE,
  Parti.nexus = FALSE,
  Export.Indiv.Al.Nexus = FALSE
)
}
\arguments{
\item{input}{the path to the folder storing the alignments (alignments have to be in
fasta format with the '.fas' extension). The name of the alignement file must 
follow thefollowing rule, WhatevereNameYouWant_NameOfTheGene.fas, e.g. "FishAlign_CO1.fas"}

\item{Sp.List.NoDNA}{an optional  vector of the species without DNA sequences that should be included
in the alignment, or the option can be NULL, in which case the function automatically creates a complete
 species list of all the species present in the different alignments.}

\item{outputConcat}{Name of the supermatrix (can include the path as well).}

\item{Seq.Name.Identical}{if TRUE then all the alignment use the same sequences 
names and the full names is used for the Concat.}

\item{split}{the split between the information in the sequence name, 
by default the separator is "_".}

\item{chunk.names.to.Keep}{the number of chunk of information (splitted by split) within the 
sequence name to retain to build the super-matrix, this name must be common to the different 
alignment files. By default the first two chunks of information splitted by the split (e.g. "_").}

\item{Homogeneise.tip.names}{if TRUE then the tips names of the individuals nexus 
alignment use the same tips names as in the original individual alignment (by default FALSE, so the original tips names 
of the alignment are conserved)}

\item{Parti.nexus}{if TRUE (default) then the partition file is also exported 
in nexus format ready to be used by IQtree2 or RAxML.}

\item{Export.Indiv.Al.Nexus}{if TRUE then the alignment of each gene is also 
exported in nexus format, it can include additional taxa without DNA sequence, 
it is devoted to be used downstream with the BEASTV2 software. 
Default is FALSE.}
}
\value{
This function returns: 1) the alignments from different gene regions
in nexus format '.nex', including taxa that do not have DNA sequence
information (nucleotides replace by '-') (all these files can be loaded separately
into BEAST); 2) a concatenation (a supermatrix) of all the sequences of
the different gene regions in nexus and fasta format; 3) a partition file in
txt format 'Partitions_Concat.txt' including the partitions of the different gene regions in the
concatenated file (this file is designed to be RAxML compatible, see RAxML manual
v8.2, https://sco.h-its.org/exelixis/resource/download/NewManual.pdf);
4) the partition file 'Partitions_Concat.nex' can also be exported in nexus format compatible to be 
loaded directly into IQtree or RAxML it the option Parti.nexus = TRUE, 
5) a conversion table convtab.txt' betwen the gene region names used in the partition file and the
true name of the gene region.
}
\description{
This function concatenates the alignments from different gene regions into a
single supermatrix in nexus and fasta formats, at the species level.  The function also allows the
inclusion of species without DNA sequences, if necessary (for instance, to then use BEAST to resolve
polytomies).
}
\examples{
# Run the function to build a supermatrix
\dontrun{

# To run the example, copy the input alignment files
# provided by the package to a temporary directory created in the
# current working directory.
src.dir = system.file("extdata/multi.align/ForConcat", package = "regPhylo")
dir.create("TempDir.ForConcat")
# Set up the path of the TempDir folder.
dest.dir = paste(getwd(), "/TempDir.ForConcat", sep="")
file.names <- dir(src.dir)
# Copy all the files stored in regPhylo/extdata/multi.align/ForConcat"
# into a temporary folder.
sapply(file.names, function(x) {
file.copy(from = paste(src.dir, x, sep = "/"),
to = paste(dest.dir, x, sep = "/"),
overwrite = FALSE) })

# Run the function to build the supermatrix.
Align.Concat(input = "TempDir.ForConcat", Sp.List = NULL, outputConcat = NULL)

#' # Import the supermatrix in R
require(ape)
Supermatrix = read.dna("TempDir.ForConcat/Concat.fas", format = "fasta")

# Create another temporary file to build a supermatrix including species without DNA.
dir.create("TempDir.ForConcat2")
file.names <- dir("TempDir.ForConcat")
# select only the .fas alignment
file.names <- file.names[grep(".fas", file.names)]
# remove the Concat.fas alignment just created above.
file.names <- file.names[-grep("Concat.fas", file.names)]
sapply(file.names, function(x) {
file.copy(from = paste("TempDir.ForConcat", x, sep = "/"),
to = paste("TempDir.ForConcat2", x, sep = "/"),
overwrite = FALSE) })


# Run the function to build a supermatrix including two species without DNA.
Align.Concat(input = "TempDir.ForConcat2",
Sp.List = c("Titi_titi", "Toto_toto"),
outputConcat = "TempDir.ForConcat2/Concat_2spNoDNA")

# Import the supermatrix into R.
Supermatrix2SpNoDNA = read.dna("TempDir.ForConcat2/Concat_2spNoDNA.fas",
format = "fasta")


# To remove the files created while running the example do the following:
unlink("TempDir.ForConcat", recursive = TRUE)
unlink("TempDir.ForConcat2", recursive = TRUE)

}

}
