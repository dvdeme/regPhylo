% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Filtering.align.Trimal.R
\name{Filtering.align.Trimal}
\alias{Filtering.align.Trimal}
\title{Remove poorly aligned nucleotides position using trimAl software.}
\usage{
Filtering.align.Trimal(input = NULL, output = NULL,
  TrimAl.path = NULL)
}
\arguments{
\item{input}{path to the folder storing the alignments in fasta format (with the}

\item{output}{path to the folder storing the trimmed alignments.
The output folder is created automatically. The suffix 'trimAuto_' or
'trimGapy_' are added to the alignment file name according to the chosen
heuristic.}

\item{TrimAl.path}{for Windows plateform, a character string which provides the path
to the trimAl executable
(eg "C:/Users/deme/Documents/Programs/TrimAl/trimal.v1.2rev59/trimAl/bin/trimal.exe").
For Linux the trimAl software must be in the $PATH.}
}
\value{
An ouptut folder is created with the trimmed alignments. In the R environment
the function returns a table with the length of the different alignments for
each gene region and alignment programs.
}
\description{
This function uses the software trimAl (Capella-Gutierrez et al. 2009, DOI:
10.1093/bioinformatics/btp348) and in particular two approaches to filter out
the data using the option -gappyout or -automated1 see (Capella-Gutierrez et
al.  2009).
}
\details{
The option "-gappyout" is very conservative method, it keeps the maximum nucleotide information and remove
the most gappy positions). This option is one of the best according Tan et al.  2015, DOI: 10.1093/sysbio/syv033).
The option "-automated1" automatically adjusts between -strict -strictplus and -gappyout heuristics which all provide a more
stringent selection potentially than the -gappyout option (see Capella-Gutierrez et al. 2009, DOI:
10.1093/bioinformatics/btp348, for more information)

The function requires trimAl to be installed and set up in the PATH for Linux plateform.
}
\examples{
# Run the function
\dontrun{
# To run the example it might be better to copy the input alignment files
# provided by the package to a temporary directory created into the
# current working directory.
src.dir = system.file("extdata/multi.align/multi.aligned", package = "regPhylo")
dir.create("TempDir.ToTrim")
# Set up the path to the TempDir folder.
dest.dir = paste(getwd(), "/TempDir.ToTrim", sep="")
file.names <- dir(src.dir)
# Copy all the files stored in regPhylo/extdata/multi.align"
# into a temporary folder.
sapply(file.names, function(x) {
file.copy(from = paste(src.dir, x, sep = "/"),
to = paste(dest.dir, x, sep = "/"),
overwrite = FALSE) })

input = "TempDir.ToTrim"
output = "Trimmed"
Filtering.align.Trimal(input = input, output = "Trimmed")

# To clean the file created while running the example do the following:
# Remove the temporary folder
unlink("TempDir.ToTrim", recursive = TRUE)
# Remove the folder with Gblocks outputs
unlink("Trimmed", recursive = TRUE)
}

}
\references{
Capella-Gutierrez et al. 2009, DOI:
10.1093/bioinformatics/btp348
}
